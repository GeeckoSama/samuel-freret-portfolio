---
import type { Video } from "../utils/interfaces/video.type";

interface Props {
  video: Video;
}
const cdn =
  process.env.PUBLIC_IMGIX_DOMAIN || import.meta.env.PUBLIC_IMGIX_DOMAIN;
const { video } = Astro.props;
---

<div id='container' class='relative h-[300vh] bg-base-100'>
  <div
    style={{
      maskImage: `url('${cdn + video.svg_mask}')`,
      maskPosition: "center center",
      maskRepeat: "no-repeat",
      maskSize: "50%",
    }}
    class='sticky top-0 flex h-screen items-center justify-center overflow-hidden mask'
  >
    <video autoplay muted loop class='h-full w-full object-cover'>
      <source src={video.video} type='video/mp4' />
    </video>
  </div>
</div>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  const container = document.querySelector("#container");
  const mask = document.querySelector(".mask");

  if (container && mask) {
    const context = gsap.context(() => {
      gsap.registerPlugin(ScrollTrigger);
      gsap
        .timeline({
          scrollTrigger: {
            trigger: container,
            start: "top top",
            end: "bottom bottom",
            scrub: true,
          },
        })
        .fromTo(mask, { maskSize: "80%" }, { maskSize: "50000%", ease: "power4.in"});
    });
  }
</script>

<!-- <style>
  @keyframes reveal-video {
    from {
      mask-size: 80%;
    }
    to {
      mask-size: 50000%;
    }
  }

  .mask {
    animation: reveal-video ease-in forwards;
    animation-timeline: scroll(root block);
    animation-range: entry 0% entry 50%;
  }
</style> -->
