---
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout.astro";
import { app } from "../utils/firebase/server";

import { Image } from "@unpic/astro";

const cdn =
  process.env.PUBLIC_IMGIX_DOMAIN || import.meta.env.PUBLIC_IMGIX_DOMAIN;

/* Check if the user is authenticated */
const auth = getAuth(app);
if (Astro.cookies.has("__session")) {
  const sessionCookie = Astro.cookies.get("__session")?.value;
  if (!sessionCookie) {
    return Astro.redirect("/signin");
  }
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);
  if (decodedCookie) {
    return Astro.redirect("/admin");
  }
}
---

<Layout title='Sign in'>
  <div
    class='h-screen flex flex-col justify-center items-center sm:mx-auto sm:w-full sm:max-w-sm'
  >
    <Image
      src='https://samuel-freret.imgix.net/logo.png'
      layout='fullWidth'
      priority={true}
      class='max-w-60 mx-auto mb-12'
    />
    <h1 class='text-3xl lg:text-5xl font-extrabold text-center mb-10'>
      Se connecter
    </h1>
    <form
      class='felx flex-col space-y-6'
      action='/api/auth/signin'
      method='post'
    >
      <label class='input input-bordered flex items-center gap-2'>
        <svg
          xmlns='http://www.w3.org/2000/svg'
          viewBox='0 0 16 16'
          fill='currentColor'
          class='h-4 w-4 opacity-70'
        >
          <path
            d='M2.5 3A1.5 1.5 0 0 0 1 4.5v.793c.026.009.051.02.076.032L7.674 8.51c.206.1.446.1.652 0l6.598-3.185A.755.755 0 0 1 15 5.293V4.5A1.5 1.5 0 0 0 13.5 3h-11Z'
          ></path>
          <path
            d='M15 6.954 8.978 9.86a2.25 2.25 0 0 1-1.956 0L1 6.954V11.5A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5V6.954Z'
          ></path>
        </svg>
        <input
          name='email'
          type='email'
          autocomplete='email'
          required
          class='grow'
          placeholder='Email'
        />
      </label>

      <label class='input input-bordered flex items-center gap-2'>
        <svg
          xmlns='http://www.w3.org/2000/svg'
          viewBox='0 0 16 16'
          fill='currentColor'
          class='h-4 w-4 opacity-70'
        >
          <path
            fill-rule='evenodd'
            d='M14 6a4 4 0 0 1-4.899 3.899l-1.955 1.955a.5.5 0 0 1-.353.146H5v1.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-2.293a.5.5 0 0 1 .146-.353l3.955-3.955A4 4 0 1 1 14 6Zm-4-2a.75.75 0 0 0 0 1.5.5.5 0 0 1 .5.5.75.75 0 0 0 1.5 0 2 2 0 0 0-2-2Z'
            clip-rule='evenodd'></path>
        </svg>
        <input
          name='password'
          type='password'
          autocomplete='current-password'
          required
          class='grow'
          placeholder='Mot de passe'
        />
      </label>

      <div>
        <button type='submit' class='btn btn-primary w-full'
          >Se connecter</button
        >
      </div>
    </form>
  </div>
</Layout>

<script>
  import {
    getAuth,
    inMemoryPersistence,
    signInWithEmailAndPassword,
  } from "firebase/auth";
  import { app } from "../utils/firebase/client";

  const auth = getAuth(app);
  // This will prevent the browser from storing session data
  auth.setPersistence(inMemoryPersistence);

  const form = document.querySelector("form") as HTMLFormElement;
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    if (!email || !password) {
      console.error("Missing email or password, ", email, password);
      return;
    }
    const userCredential = await signInWithEmailAndPassword(
      auth,
      email,
      password
    );
    const idToken = await userCredential.user.getIdToken();
    const response = await fetch("/api/auth/signin", {
      method: "GET",
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    });

    if (response.redirected) {
      window.location.assign(response.url);
    } else {
      alert("Erreur lors de la connexion, " + response.statusText);
    }
  });
</script>
